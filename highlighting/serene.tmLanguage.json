{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Serene",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#characters"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#block_comments"
		},
		{
			"include": "#function_names"
		},
		{
			"include": "#nocompile"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.serene",
				"match": "\\b(if|else|elseif|while|for|match|return|break|continue|exit|either|definitions|policies)\\b"
			},
			{
				"name": "keyword.control.serene",
				"match": "^\\s*~"
			},
			{
				"name": "keyword.other.serene",
				"match": "\\b(let|set|var|const|run|print|import|include|or|and|not|with)\\b"
			},
			{
				"name": "storage.type.serene",
				"match": "\\b(function|method|interface|type|struct|subscript)\\b"
			},
			{
				"name": "storage.type.modifier",
				"match": "\\b(mut|mutate|move|copy)\\b"
			},
			{
				"name": "entity.name.type",
				"match": "\\b[A-Z]\\w*\\b"
			},
			{
				"name": "variable.parameter",
				"match": "(?<=^\\s*(function|method) \\w+\\((.*,\\s*)*(\\w+|)\\s*)\\w+(?=\\s*:)"
			}]
		},
		"function_names": {
			"name": "entity.name.function",
			"match": "((?<=function\\s)|(?<=method\\s)|(?<=subscript\\s))\\w+!?"
		},
		"strings": {
			"name": "string.quoted.double.serene",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.serene",
				"match": "\\\\."
			}]
		},
		"characters": {
			"name": "string.quoted.single.serene",
			"begin": "'",
			"end": "'",
			"patterns": [{
				"name": "constant.character.escape.serene",
				"match": "\\\\."
			}]
		},
		"comments": {
			"name": "comment.line.double-slash",
			"begin": "//",
			"end": "\n"
		},
		"block_comments": {
			"name": "comment.block",
			"begin": "/\\*",
			"end": "\\*/"
		},
		"nocompile": {
			"name": "string.regexp",
			"begin": "\\$",
			"end": "\\$"
		}
	},
	"scopeName": "source.serene"
}
class LinkedList {
    constructor(first: ~int) {
        public nodes = new Pool{~Node}();
        private Noodle: ~type = nodes.Noodle;
        public head: ~Noodle = nodes.newObject(first, null);
    }
    
    class Node {
        public data: ~int;
        public next: ~Noodle;
    }

    method addFirst(a: ~int) {
        self.head = nodes.newObject(a, self.head);
    }

    method addLast(a: ~int) {
        if (self.head == null) {
            self.head = nodes.newObject(a, null);
        }
        else {
            let x = nodes[self.head];
            while (x.next != null) {
                x = nodes[x.next];
            }
            x.next = nodes.newObject(a, null);
        }
    }

    method deleteFirst() {
        if (self.head == null) return;
        let x = self.head;
        self.head = nodes[self.head].next;
        nodes.deleteObject(x);
    }

    method deleteLast() {
        if (self.head == null) return;
        let x = nodes[self.head];
        while (x.next != null) {
            x = nodes[x.next];
        }
        nodes.deleteObject(x);
    }
}